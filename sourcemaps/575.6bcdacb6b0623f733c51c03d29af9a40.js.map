{"version":3,"file":"js/575.edb46bd1c614016f401e.js","mappings":"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","sources":["webpack:///./config/empty.js","webpack:///./src/Components/PresentationalCard/DescriptionCard.js","webpack:///./src/Components/PurchaseCard/PurchaseCard.js","webpack:///./src/Components/TopBanner/TopBanner.js","webpack:///./src/Routes/SandboxPage/SandboxPage.js","webpack:///./src/Routes.js","webpack:///./src/App.js","webpack:///./src/store/index.js"],"sourcesContent":["// Used as an empty module to save bundle size\nmodule.exports = {};\n","import React from 'react';\nimport {\n  Card,\n  CardBody,\n  Grid,\n  GridItem,\n  TextContent,\n  Text,\n  TextVariants,\n} from '@patternfly/react-core';\n\nconst DescriptionCard = () => (\n  <Card className=\"pf-u-mb-xl\">\n    <CardBody>\n      <Grid>\n        <GridItem\n          md={6}\n          lg={8}\n          component={TextContent}\n          className=\"pf-u-pr-3xl-on-md\"\n        >\n          <Text component={TextVariants.h2} className=\"pf-u-mb-md\">\n            What is Developer Sandbox for Red Hat OpenShift?\n          </Text>\n          <Text component={TextVariants.p} className=\"pf-u-color-200\">\n            The sandbox provides you with a private OpenShift environment in a\n            shared, multi-tenant OpenShift cluster that is pre-configured with a\n            set of developer tools. You can easily create containers from your\n            source code or Dockerfile, build new applications using the samples\n            and stacks provided, add services such as databases from our\n            templates catalog, deploy Helm charts, and much more. Discover the\n            rich capabilities of the full developer experience on OpenShift with\n            the sandbox.\n          </Text>\n        </GridItem>\n        <GridItem md={6} lg={4}>\n          <img\n            className=\"sbx-sandbox-graphic pf-u-pt-md pf-u-pt-0-on-md\"\n            src=\"https://console.redhat.com/apps/frontend-assets/background-images/developer-sandbox-ui/sandbox-diagram.png\"\n          />\n        </GridItem>\n      </Grid>\n    </CardBody>\n  </Card>\n);\n\nexport default DescriptionCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\nimport {\n  Button,\n  Card,\n  CardBody,\n  Flex,\n  Grid,\n  GridItem,\n  Text,\n  TextContent,\n  TextVariants,\n} from '@patternfly/react-core';\n\nconst PurchaseCard = () => {\n  const push = useChrome(({ chromeHistory: { push } = {} }) => push);\n\n  return (\n    <Card>\n      <CardBody>\n        <Grid>\n          <GridItem\n            md={6}\n            lg={8}\n            component={TextContent}\n            className=\"pf-u-pr-2xl\"\n          >\n            <Text component={TextVariants.h2} className=\"pf-u-mb-md\">\n              Continue your experience with Red Hat OpenShift service on AWS\n            </Text>\n            <Text\n              component={TextVariants.p}\n              className=\"pf-u-color-200 pf-u-mb-lg\"\n            >\n              Get started with your own dedicated cluster on AWS, managed by Red\n              Hat and Amazon, and even move your application from Dev Sandbox.\n            </Text>\n            <Flex className=\"pf-u-flex-direction-column pf-u-flex-direction-row-on-md pf-u-mt-lg pf-u-mt-0-on-md\">\n              <Button\n                component=\"a\"\n                variant=\"secondary\"\n                onClick={(e) => {\n                  e.preventDefault();\n                  push('./create/rosa/welcome');\n                }}\n                className=\"pf-u-flex-grow-1 pf-u-mb-md pf-u-mb-0-on-lg\"\n                href=\"/create/rosa/welcome\"\n                isLarge\n              >\n                Get Started\n              </Button>\n              <Button\n                variant=\"tertiary\"\n                component=\"a\"\n                className=\"sbx-c-card__button pf-u-flex-grow-1\"\n                href=\"https://developers.redhat.com/developer-sandbox/get-started\"\n                isLarge\n              >\n                Learn how to move your application\n              </Button>\n            </Flex>\n          </GridItem>\n        </Grid>\n      </CardBody>\n    </Card>\n  );\n};\n\nPurchaseCard.propTypes = {\n  title: PropTypes.string,\n};\n\nexport default PurchaseCard;\n","import React from 'react';\nimport {\n  Button,\n  Card,\n  CardBody,\n  Text,\n  TextContent,\n  TextVariants,\n} from '@patternfly/react-core';\nimport '../../Routes/SandboxPage/SandboxPage.scss';\n\nconst TopBanner = () => (\n  <Card className=\"sbx-c-card-banner pf-u-px-lg pf-u-pt-sm pf-u-pb-sm\" isPlain>\n    <CardBody className=\"pf-u-w-66-on-md\">\n      <TextContent>\n        <Text\n          component={TextVariants.h1}\n          className=\"pf-u-color-light-100 pf-u-mb-md\"\n        >\n          Get started with the Developer Sandbox for Red Hat OpenShift\n        </Text>\n        <Text className=\"pf-u-color-light-200\">\n          If you are exploring how to run your code as containers in OpenShift,\n          our free Developer Sandbox instantly gives you a way to try it out.\n          Not only can you easily deploy code from your Git repo, you can\n          leverage our samples, run a database, connect to Red Hat Managed\n          Application Services, and edit code directly with pre-configured cloud\n          IDE.\n        </Text>\n      </TextContent>\n      <Button\n        className=\"pf-u-mt-2xl\"\n        component=\"a\"\n        href=\"https://developers.redhat.com/developer-sandbox/get-started\"\n        isLarge\n      >\n        Learn more about Sandbox for Red Hat OpenShift\n      </Button>\n    </CardBody>\n  </Card>\n);\n\nexport default TopBanner;\n","import React from 'react';\nimport DescriptionCard from '../../Components/PresentationalCard/DescriptionCard';\nimport PurchaseCard from '../../Components/PurchaseCard/PurchaseCard';\nimport TopBanner from '../../Components/TopBanner/TopBanner';\nimport Main from '@redhat-cloud-services/frontend-components/Main';\nimport './SandboxPage.scss';\n\nconst SandboxPage = () => {\n  return (\n    <>\n      <TopBanner />\n      <Main className=\"pf-u-pt-xl pf-u-px-2xl pf-u-pb-2xl\">\n        <DescriptionCard />\n        <PurchaseCard />\n      </Main>\n    </>\n  );\n};\n\nexport default SandboxPage;\n","import React, { Suspense } from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\n\nimport { Bullseye, Spinner } from '@patternfly/react-core';\nimport SandboxPage from './Routes/SandboxPage/SandboxPage';\n\n/**\n * the Switch component changes routes depending on the path.\n *\n * Route properties:\n *      exact - path must match exactly,\n *      path - https://prod.foo.redhat.com:1337/insights/advisor/rules\n *      component - component to be rendered when a route has been chosen.\n */\nexport const Routes = () => (\n  <Suspense\n    fallback={\n      <Bullseye>\n        <Spinner />\n      </Bullseye>\n    }\n  >\n    <Switch>\n      <Route path=\"/\" component={SandboxPage} />\n      <Route>\n        <Redirect to=\"/\" />\n      </Route>\n    </Switch>\n  </Suspense>\n);\n","import React, { Fragment, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Routes } from './Routes';\nimport './App.scss';\n\nimport { getRegistry } from '@redhat-cloud-services/frontend-components-utilities/Registry';\nimport NotificationsPortal from '@redhat-cloud-services/frontend-components-notifications/NotificationPortal';\nimport { notificationsReducer } from '@redhat-cloud-services/frontend-components-notifications/redux';\n\nconst App = (props) => {\n  const history = useHistory();\n\n  useEffect(() => {\n    const registry = getRegistry();\n    registry.register({ notifications: notificationsReducer });\n    insights.chrome.init();\n\n    // TODO change this to your appname\n    insights.chrome.identifyApp('sandbox');\n    const unregister = insights.chrome.on('APP_NAVIGATION', (event) =>\n      history.push(`/${event.navId}`)\n    );\n    return () => {\n      unregister();\n    };\n  }, []);\n\n  return (\n    <Fragment>\n      <NotificationsPortal />\n      <Routes childProps={props} />\n    </Fragment>\n  );\n};\n\nexport default App;\n","import { getRegistry } from '@redhat-cloud-services/frontend-components-utilities/Registry';\nimport promiseMiddleware from 'redux-promise-middleware';\nimport notificationsMiddleware from '@redhat-cloud-services/frontend-components-notifications/notificationsMiddleware';\n\nlet registry;\n\nexport function init(...middleware) {\n  registry = getRegistry({}, [\n    promiseMiddleware,\n    notificationsMiddleware({ errorDescriptionKey: ['detail', 'stack'] }),\n    ...middleware,\n  ]);\n  return registry;\n}\n\nexport function getStore() {\n  return registry.getStore();\n}\n\nexport function register(...args) {\n  return registry.register(...args);\n}\n"],"names":["module","exports","Card","className","CardBody","Grid","GridItem","md","lg","component","TextContent","Text","TextVariants","src","PurchaseCard","push","useChrome","chromeHistory","Flex","Button","variant","onClick","e","preventDefault","href","isLarge","propTypes","title","PropTypes","isPlain","Main","Routes","Suspense","fallback","Bullseye","Spinner","Switch","Route","path","SandboxPage","Redirect","to","props","history","useHistory","useEffect","getRegistry","register","notifications","notificationsReducer","insights","chrome","init","identifyApp","unregister","on","event","navId","Fragment","childProps","middleware","promiseMiddleware","notificationsMiddleware","errorDescriptionKey"],"sourceRoot":""}