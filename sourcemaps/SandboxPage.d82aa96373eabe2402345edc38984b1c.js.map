{"version":3,"file":"js/SandboxPage.1693583360367.502305a3e8bf0937adb8.js","mappings":"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","sources":["webpack:///./src/components/PageBanner/PageBanner.tsx","webpack:///./src/components/PageBanner/SandboxPageBanner.tsx","webpack:///./src/components/HowItWorksCard/HowItWorksCard.tsx","webpack:///./src/hooks/useRegistrationContext.ts","webpack:///./src/components/GetStartedCard/GetStartedCard.tsx","webpack:///./src/components/ServiceCatalog/ServiceCard.tsx","webpack:///./src/components/ServiceCatalog/ServiceCatalog.tsx","webpack:///./src/hooks/useSandboxServices.ts","webpack:///./src/routes/SandboxPage/SandboxPage.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Divider,\n  Flex,\n  FlexItem,\n  PageSection,\n  PageSectionVariants,\n  Text,\n  TextContent,\n  TextVariants,\n} from '@patternfly/react-core';\n\ntype Props = {\n  children: React.ReactNode;\n  icon: React.ReactNode;\n  title: string;\n};\n\nconst PageBanner = ({ children, icon, title }: Props) => (\n  <PageSection variant={PageSectionVariants.light} className=\"pf-u-p-xl\">\n    <Flex\n      direction={{ default: 'column', sm: 'row' }}\n      spaceItems={{ default: 'spaceItemsMd', sm: 'spaceItemsXl' }}\n      alignItems={{ sm: 'alignItemsFlexStart' }}\n      flexWrap={{ default: 'nowrap' }}\n    >\n      <FlexItem style={{ flexShrink: 0 }}>{icon}</FlexItem>\n      <Divider orientation={{ default: 'horizontal', sm: 'vertical' }} />\n      <FlexItem>\n        <TextContent>\n          <Text component={TextVariants.h1}>{title}</Text>\n          <Text component={TextVariants.p}>{children}</Text>\n        </TextContent>\n      </FlexItem>\n    </Flex>\n  </PageSection>\n);\n\nexport default PageBanner;\n","import * as React from 'react';\nimport iconUrl from '../../images/Logo-Red_Hat-Developer-A-Standard-RGB.svg';\nimport PageBanner from './PageBanner';\n\nconst SandboxPageBanner = () => (\n  <PageBanner title=\"Red Hat Developer Sandbox\" icon={<img src={iconUrl} style={{ height: 64 }} />}>\n    Try Red Hat's products and technologies without setup or configuration.\n  </PageBanner>\n);\n\nexport default SandboxPageBanner;\n","import React from 'react';\nimport { Card, CardBody, Text, TextContent, TextVariants } from '@patternfly/react-core';\nimport howItWorksImg from '../../images/2021_RHD__illustration_A.svg';\n\nimport './HowItWorksCard.scss';\n\nconst HowItWorksCard = () => (\n  <Card>\n    <CardBody className=\"how-it-works\">\n      <TextContent>\n        <Text component={TextVariants.h1}>How it works</Text>\n        <Text component={TextVariants.p}>\n          The sandbox provides you with a private OpenShift environment in a shared, multi-tenant\n          OpenShift cluster that is pre-configured with a set of developer tools. You can easily\n          create containers from your source code or Dockerfile, build new applications using the\n          samples and stacks provided, add services such as databases from our templates catalog,\n          deploy Helm charts, and much more. Discover the rich capabilities of the full developer\n          experience on OpenShift with the sandbox.\n        </Text>\n      </TextContent>\n      <img src={howItWorksImg} className=\"pf-u-w-75 pf-u-pt-md pf-u-pb-md\" />\n      <div className=\"how-it-works__viz\">\n        <div>Import your code</div>\n        <div />\n        <div>Deploy and share your application</div>\n        <div />\n        <div>Play, experiment, and learn</div>\n      </div>\n    </CardBody>\n  </Card>\n);\n\nexport default HowItWorksCard;\n","import * as React from 'react';\nimport { RegistrationContext } from '../utils/registration-context';\n\nexport const useRegistrationContext = () => React.useContext(RegistrationContext);\n","import * as React from 'react';\nimport {\n  Alert,\n  AlertActionCloseButton,\n  AlertVariant,\n  ButtonVariant,\n  Card,\n  CardBody,\n  Grid,\n  GridItem,\n  List,\n  ListItem,\n  Title,\n} from '@patternfly/react-core';\nimport CheckIcon from '@patternfly/react-icons/dist/esm/icons/check-icon';\nimport heroImg from '../../images/sandbox-hero-graphic.svg';\nimport { useRegistrationContext } from '../../hooks/useRegistrationContext';\nimport AnalyticsButton from '../AnalyticsButton/AnalyticsButton';\nimport { signup } from '../../services/registration-service';\nimport { errorMessage } from '../../utils/utils';\nimport { Status } from '../../utils/registration-context';\n\nconst PrimaryCheckIcon = () => (\n  <CheckIcon\n    style={{\n      color: 'var(--pf-global--primary-color--100)',\n    }}\n  />\n);\n\nconst STATUS_TITLE: { [key in Status]?: string } = {\n  'pending-approval': 'Pending approval',\n  provisioning: 'Preparing your Sandbox',\n};\n\nconst GetStartedCard = () => {\n  const [error, setError] = React.useState<string | undefined>();\n  const [loading, setLoading] = React.useState(false);\n  const [state, { setShowUserSignup, refreshSignupData }] = useRegistrationContext();\n  return (\n    <>\n      <Card>\n        <CardBody>\n          <Grid hasGutter>\n            <GridItem\n              md={4}\n              order={{ md: '1' }}\n              style={{ alignSelf: 'center' }}\n              className=\"pf-u-text-align-center\"\n            >\n              <img\n                src={heroImg}\n                style={{ maxHeight: 200 }}\n                className=\"pf-u-display-block pf-u-m-auto pf-u-mb-lg pf-u-mb-auto-on-md\"\n              />\n            </GridItem>\n            <GridItem md={8}>\n              <Title headingLevel=\"h1\">Start exploring Developer Sandbox for free</Title>\n              <List isPlain className=\"pf-u-p-md pf-u-pt-lg pf-u-pb-lg\">\n                <ListItem icon={<PrimaryCheckIcon />}>\n                  Instant access to a free pre-configured for learning and experimenting with\n                  OpenShift, Kubernetes, and containers.\n                </ListItem>\n                <ListItem icon={<PrimaryCheckIcon />}>\n                  Built in, pre-configured, developer tooling combined with a set of sample\n                  applications enables immediate productivity with minimal effort.\n                </ListItem>\n                <ListItem icon={<PrimaryCheckIcon />}>\n                  Includes Kubernetes-hosted Jupyter Notebooks for Python-based AI/ML modeling.\n                </ListItem>\n                <ListItem icon={<PrimaryCheckIcon />}>\n                  Learn how to use OpenShift with guided tutorials and sample applications.\n                </ListItem>\n                <ListItem icon={<PrimaryCheckIcon />}>\n                  Includes an instance of Red Hat OpenShift Dev Spaces, a cloud hosted IDE, to\n                  enable a consistent, rapid application development experience, all within the\n                  browser.\n                </ListItem>\n              </List>\n              {error ? (\n                <Alert\n                  title=\"An error occurred\"\n                  variant={AlertVariant.danger}\n                  actionClose={<AlertActionCloseButton onClose={() => setError(undefined)} />}\n                  isInline\n                  className=\"pf-u-mb-lg\"\n                >\n                  {error}\n                </Alert>\n              ) : null}\n              <AnalyticsButton\n                isDisabled={\n                  loading || state.status === 'pending-approval' || state.status === 'provisioning'\n                }\n                isLoading={loading || state.status === 'provisioning'}\n                onClick={async () => {\n                  if (state.status === 'new') {\n                    try {\n                      setError(undefined);\n                      setLoading(true);\n                      await signup();\n                      await refreshSignupData();\n                    } catch (e) {\n                      setError(errorMessage(e));\n                    } finally {\n                      setLoading(false);\n                    }\n                  } else {\n                    setShowUserSignup(true);\n                  }\n                }}\n                className=\"pf-u-w-100 pf-u-w-initial-on-sm\"\n                analytics={{\n                  event: 'DevSandbox Signup Start',\n                }}\n              >\n                {STATUS_TITLE[state.status] || 'Get started'}\n              </AnalyticsButton>\n              <AnalyticsButton\n                variant={ButtonVariant.link}\n                component=\"a\"\n                href=\"https://developers.redhat.com/developer-sandbox\"\n                target=\"_blank\"\n                rel=\"noopener\"\n                className=\"pf-u-w-100 pf-u-w-initial-on-sm\"\n                style={{\n                  display: 'inline-block',\n                  whiteSpace: 'initial',\n                }}\n                analytics={{\n                  event: 'DevSandbox Learn More',\n                }}\n              >\n                Learn more about the Developer Sandbox\n              </AnalyticsButton>\n            </GridItem>\n          </Grid>\n        </CardBody>\n      </Card>\n    </>\n  );\n};\n\nexport default GetStartedCard;\n","import {\n  ButtonVariant,\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  Text,\n  TextContent,\n  TextVariants,\n} from '@patternfly/react-core';\nimport * as React from 'react';\nimport AnalyticsButton from '../AnalyticsButton/AnalyticsButton';\n\ntype Props = {\n  title: string;\n  subtitle: string;\n  description: string;\n  iconUrl: string;\n  learnMoreUrl: string;\n  launchUrl?: string;\n};\n\nconst ServiceCard = ({ title, subtitle, description, iconUrl, learnMoreUrl, launchUrl }: Props) => (\n  <Card className=\"pf-u-h-100\">\n    <CardHeader>\n      <img src={iconUrl} style={{ width: 48 }} className=\"pf-u-mr-md\" />\n      <TextContent>\n        <Text component={TextVariants.h2}>{title}</Text>\n        {subtitle}\n      </TextContent>\n    </CardHeader>\n    <CardBody>{description}</CardBody>\n    <CardFooter>\n      {launchUrl ? (\n        <AnalyticsButton\n          component=\"a\"\n          href={launchUrl}\n          className=\"pf-u-mr-md\"\n          target=\"_blank\"\n          rel=\"noopener\"\n          analytics={{\n            event: 'DevSandbox Service Launch',\n            properties: {\n              name: `${title} ${subtitle}`,\n              url: launchUrl,\n            },\n          }}\n        >\n          Launch\n        </AnalyticsButton>\n      ) : null}\n      <AnalyticsButton\n        variant={ButtonVariant.link}\n        component=\"a\"\n        href={learnMoreUrl}\n        target=\"_blank\"\n        rel=\"noopener\"\n        isInline\n        analytics={{\n          event: 'DevSandbox Service Learn',\n          properties: {\n            name: `${title} ${subtitle}`,\n            url: learnMoreUrl,\n          },\n        }}\n      >\n        Learn more\n      </AnalyticsButton>\n    </CardFooter>\n  </Card>\n);\n\nexport default ServiceCard;\n","import * as React from 'react';\nimport { Gallery, GalleryItem } from '@patternfly/react-core';\nimport { useSandboxServices } from '../../hooks/useSandboxServices';\nimport ServiceCard from './ServiceCard';\n\ntype Props = {\n  isDisabled?: boolean;\n};\n\nconst ServiceCatalog = ({ isDisabled }: Props) => {\n  const services = useSandboxServices();\n  return (\n    <Gallery hasGutter minWidths={{ default: '330px' }}>\n      {services.map((service) => (\n        <GalleryItem key={service.title}>\n          <ServiceCard {...service} launchUrl={isDisabled ? undefined : service.launchUrl} />\n        </GalleryItem>\n      ))}\n    </Gallery>\n  );\n};\nexport default ServiceCatalog;\n","import * as React from 'react';\nimport openShiftIconUrl from '../images/Product_Icon-Red_Hat-OpenShift-RGB.svg';\nimport dataScienceUrl from '../images/Product_Icon-Red_Hat-OpenShift_Data_Science-RGB.svg';\nimport devSpacesUrl from '../images/Product_Icon-Red_Hat-OpenShift_Dev_Spaces-RGB.svg';\nimport { useRegistrationContext } from './useRegistrationContext';\n\nexport type Service = {\n  title: string;\n  subtitle: string;\n  description: string;\n  iconUrl: string;\n  learnMoreUrl: string;\n  launchUrl?: string;\n};\n\nexport const useSandboxServices = () => {\n  const [{ signupData }] = useRegistrationContext();\n  return React.useMemo<Service[]>(\n    () => [\n      {\n        title: 'Red Hat',\n        subtitle: 'OpenShift',\n        description:\n          'A cloud-native application platform with everything you need to manage your development life cycle securely, including standardized workflows, support for multiple environments, continuous integration, and release management.',\n        iconUrl: openShiftIconUrl,\n        learnMoreUrl: 'https://developers.redhat.com/products/openshift/overview',\n        launchUrl:\n          signupData?.consoleURL && signupData?.defaultUserNamespace\n            ? `${signupData?.consoleURL}/add/ns/${signupData?.defaultUserNamespace}`\n            : signupData?.consoleURL,\n      },\n      {\n        title: 'Red Hat',\n        subtitle: 'Dev Spaces',\n        description:\n          'A collaborative Kubernetes-native solution for rapid application development that delivers consistent developer environments on Red Hat OpenShift to allow anyone with a browser to contribute code in under two minutes.',\n        iconUrl: devSpacesUrl,\n        learnMoreUrl: 'https://developers.redhat.com/products/openshift-dev-spaces/overview',\n        launchUrl: signupData?.cheDashboardURL,\n      },\n      {\n        title: 'Red Hat',\n        subtitle: 'Data Science',\n        description:\n          'Red Hat OpenShift Data Science is a part of the Red Hat OpenShift AI portfolio and provides tools across the AI/ML lifecycle.',\n        iconUrl: dataScienceUrl,\n        learnMoreUrl:\n          'https://developers.redhat.com/products/red-hat-openshift-data-science/overview',\n        launchUrl: signupData?.rhodsMemberURL,\n      },\n    ],\n    [signupData],\n  );\n};\n","import React from 'react';\nimport {\n  Alert,\n  AlertVariant,\n  Bullseye,\n  Flex,\n  PageSection,\n  Spinner,\n  Text,\n  TextContent,\n  TextVariants,\n} from '@patternfly/react-core';\nimport SandboxPageBanner from '../../components/PageBanner/SandboxPageBanner';\nimport HowItWorksCard from '../../components/HowItWorksCard/HowItWorksCard';\nimport GetStartedCard from '../../components/GetStartedCard/GetStartedCard';\nimport ServiceCatalog from '../../components/ServiceCatalog/ServiceCatalog';\nimport { useRegistrationContext } from '../../hooks/useRegistrationContext';\n\nconst SandboxPage = () => {\n  const [{ status, error }] = useRegistrationContext();\n  const showOverview = status !== 'ready';\n  return (\n    <>\n      <SandboxPageBanner />\n      <PageSection className=\"pf-u-p-xl\">\n        {status === 'unknown' ? (\n          <Bullseye>\n            <Spinner />\n          </Bullseye>\n        ) : (\n          <Flex direction={{ default: 'column' }} spaceItems={{ default: 'spaceItemsXl' }}>\n            {error ? (\n              <Alert\n                title=\"An error occurred\"\n                variant={AlertVariant.danger}\n                className=\"pf-u-mb-lg\"\n                style={{ boxShadow: 'var(--pf-global--BoxShadow--sm)' }}\n              >\n                {error}\n              </Alert>\n            ) : null}\n            {showOverview ? (\n              <>\n                <GetStartedCard />\n                <HowItWorksCard />\n              </>\n            ) : (\n              <>\n                <TextContent>\n                  <Text component={TextVariants.h1}>Available services</Text>\n                  <Text component={TextVariants.p}>\n                    Now that your Sandbox is activated, these are all the cool things that are\n                    available to you, right in your Sandbox!\n                  </Text>\n                </TextContent>\n                <ServiceCatalog />\n              </>\n            )}\n          </Flex>\n        )}\n      </PageSection>\n    </>\n  );\n};\n\nexport default SandboxPage;\n"],"names":["children","icon","title","PageSection","variant","PageSectionVariants","className","Flex","direction","default","sm","spaceItems","alignItems","flexWrap","FlexItem","style","flexShrink","Divider","orientation","TextContent","Text","component","TextVariants","src","height","Card","CardBody","useRegistrationContext","PrimaryCheckIcon","color","STATUS_TITLE","provisioning","error","setError","loading","setLoading","state","setShowUserSignup","refreshSignupData","Grid","hasGutter","GridItem","md","order","alignSelf","maxHeight","Title","headingLevel","List","isPlain","ListItem","Alert","AlertVariant","actionClose","AlertActionCloseButton","onClose","undefined","isInline","AnalyticsButton","isDisabled","status","isLoading","onClick","analytics","event","ButtonVariant","href","target","rel","display","whiteSpace","subtitle","description","iconUrl","learnMoreUrl","launchUrl","CardHeader","width","CardFooter","properties","name","url","signupData","services","consoleURL","defaultUserNamespace","cheDashboardURL","rhodsMemberURL","Gallery","minWidths","map","service","GalleryItem","key","showOverview","Bullseye","Spinner","boxShadow"],"sourceRoot":""}